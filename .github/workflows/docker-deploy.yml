name: Deploy tag to DockerHub
on: 
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Build with Maven
        run: ./mvnw clean package
      - name: Install buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=bladetitan/mamba-backend
          DOCKER_PLATFORMS=linux/amd64,linux/arm64
          VERSION=${GITHUB_REF#refs/tags/v}
          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${TAGS}
              -
      - name: Docker Login
        if: success()
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" 
      - name: Build and push image
        if: success()
        run: |
          docker buildx build \
            --output "type=image,push=true" \
            ${{ steps.prepare.outputs.buildx_args }} \
            .
      - name: Docker Check Manifest
        if: always()
        run: |
          docker run --rm mplatform/mquery ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}